{{ if .Values.ui.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kafka-cost-control-ui
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}-kafka-cost-control-ui
      {{- with .Values.ui.labels }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
  replicas: {{ .Values.ui.replicas }}
  template:
    metadata:
      labels:
        k8s-app: {{ .Release.Name}}-kafka-cost-control-ui
        {{- with .Values.ui.labels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      terminationGracePeriodSeconds: 10
      volumes:
        - name: empty-dir
          emptyDir: {}
      containers:
        - name: kafka-cost-control-ui
          image: {{ .Values.ui.image }}
          securityContext:
            {{- .Values.ui.securityContext | toYaml | nindent 12 }}
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              cpu: {{ .Values.ui.resources.limits.cpu }}
              memory: {{ .Values.ui.resources.limits.memory }}
            requests:
              cpu: {{ .Values.ui.resources.requests.cpu }}
              memory: {{ .Values.ui.resources.requests.memory }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
          ports:
            - containerPort: 8080
              name: http
          startupProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-kafka-cost-control-ui-service
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
  selector:
    k8s-app: {{ .Release.Name }}-kafka-cost-control-ui
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ .Release.Name }}-kafka-cost-control-ui-ingress
spec:
  rules:
    - host: {{ .Values.ui.host }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: {{ .Release.Name }}-kafka-cost-control-ui-service
                port:
                  number: 80
{{- end -}}
