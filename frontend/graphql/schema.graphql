type ContextDataEntity {
  context(
    "Get entry/entries for a certain key/s"
    key: [String]
  ): [Entry_String_String!]!
  "ISO-8601"
  creationTime: DateTime!
  entityType: EntityType!
  id: String
  regex: String!
  "ISO-8601"
  validFrom: DateTime
  "ISO-8601"
  validUntil: DateTime
}

type Entry_String_String {
  key: String
  value: String
}

type MetricNameEntity {
  "ISO-8601"
  lastSeen: DateTime!
  metricName: String!
}

"Mutation root"
type Mutation {
  deleteContextData(request: ContextDataDeleteRequestInput): ContextDataEntity
  deletePricingRule(request: PricingRuleDeleteRequestInput): PricingRuleEntity
  reprocess(
    areYouSure: String!,
    "ISO-8601"
    startTime: DateTime
  ): String!
  saveContextData(request: ContextDataSaveRequestInput): ContextDataEntity!
  savePricingRule(request: PricingRuleSaveRequestInput): PricingRuleEntity!
}

type PricingRuleEntity {
  baseCost: Float!
  costFactor: Float!
  "ISO-8601"
  creationTime: DateTime!
  metricName: String!
}

"Query root"
type Query {
  contextData: [ContextDataEntity!]!
  currentUser: String!
  metricNames: [MetricNameEntity!]!
  pricingRules: [PricingRuleEntity!]!
}

enum EntityType {
  PRINCIPAL
  TOPIC
  UNKNOWN
}

"Scalar for BigDecimal"
scalar BigDecimal

"Scalar for BigInteger"
scalar BigInteger

"Scalar for DateTime"
scalar DateTime

input ContextDataDeleteRequestInput {
  id: String!
}

input ContextDataSaveRequestInput {
  context: [Entry_String_StringInput!]!
  entityType: EntityType!
  id: String
  regex: String!
  "ISO-8601"
  validFrom: DateTime
  "ISO-8601"
  validUntil: DateTime
}

input Entry_String_StringInput {
  key: String
  value: String
}

input PricingRuleDeleteRequestInput {
  metricName: String!
}

input PricingRuleSaveRequestInput {
  baseCost: Float!
  costFactor: Float!
  metricName: String!
}
