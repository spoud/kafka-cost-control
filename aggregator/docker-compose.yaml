version: '3.0'
services:
  kcc:
    image: spoud/kafka-cost-control:latest
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.jvm
#  kcc-native:
#    image: ghcr.io/spoud/kafka-cost-control/aggregator:native
#    build:
#      context: .
#      dockerfile: src/main/docker/Dockerfile.native-micro

  broker:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://broker:29092,CONTROLLER://broker:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      # Replace CLUSTER_ID with a unique base64 UUID using "bin/kafka-storage.sh random-uuid"
      # See https://docs.confluent.io/kafka/operations-tools/kafka-tools.html#kafka-storage-sh
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    depends_on:
      - broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafkasetup:
    depends_on:
      - broker
    image: confluentinc/cp-kafka:7.5.0
    restart: on-failure
    # create topics: pricing-rules, context-data, aggregated, aggregated-table-friendly, metrics-raw-telegraf-env
    entrypoint:
      - /bin/bash
      - -c
      - |
        kafka-topics --bootstrap-server broker:29092 --create --topic pricing-rules --partitions 1 --replication-factor 1 --config cleanup.policy=compact
        kafka-topics --bootstrap-server broker:29092 --create --topic context-data --partitions 1 --replication-factor 1 --config cleanup.policy=compact
        kafka-topics --bootstrap-server broker:29092 --create --topic aggregated --partitions 1 --replication-factor 1
        kafka-topics --bootstrap-server broker:29092 --create --topic aggregated-table-friendly --partitions 1 --replication-factor 1 --config retention.ms=-1
        kafka-topics --bootstrap-server broker:29092 --create --topic metrics-raw-telegraf-env --partitions 1 --replication-factor 1 --config retention.ms=-1
        echo "Kafka topics created successfully."
