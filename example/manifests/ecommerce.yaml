# This file illustrates how to use the synth client with a Strimzi cluster.
# It defines a kafka user for the synth client, a topic to write to, and a deployment of the client itself.
# The metrics are exposed on port 8081 (this port is also exposed via a service).
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaUser
metadata:
  annotations:
    spoud.io/kcc-context.application: ecommerce
  labels:
    strimzi.io/cluster: my-cluster
  name: ecommerce
spec:
  authentication:
    type: scram-sha-512
  authorization:
    acls:
    - host: '*'
      operations:
      - Describe
      - Write
      - Read
      - Alter
      resource:
        name: ecommerce-purchases
        patternType: literal
        type: topic
    - host: '*'
      operations:
      - Read
      resource:
        name: ecommerce-
        patternType: prefix
        type: group
    type: simple
---
apiVersion: kafka.strimzi.io/v1beta2
kind: KafkaTopic
metadata:
  annotations:
    spoud.io/kcc-context.application: ecommerce
  labels:
    strimzi.io/cluster: my-cluster
  name: ecommerce-purchases
spec:
  config:
    retention.ms: 86400000
  partitions: 1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: ecommerce
  name: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ecommerce
  strategy: {}
  template:
    metadata:
      labels:
        app: ecommerce
    spec:
      containers:
      - image: ghcr.io/spoud/kafka-synth-client:v1.0.1
        name: synth
        resources: {}
        ports:
        - containerPort: 8081
          name: prometheus
        env:
        - name: SYNTH_CLIENT_TOPIC
          value: ecommerce-purchases
        - name: KAFKA_BOOTSTRAP_SERVERS
          value: my-cluster-kafka-bootstrap:9094
        - name: KAFKA_GROUP_ID
          value: ecommerce-group
        - name: KAFKA_SASL_MECHANISM
          value: SCRAM-SHA-512
        - name: SYNTH_CLIENT_MESSAGES_MESSAGES_PER_SECOND
          value: "75"
        - name: KAFKA_SASL_JAAS_CONFIG
          valueFrom:
            secretKeyRef:
              name: ecommerce
              key: sasl.jaas.config
        # don't forget to adjust this to SASL_SSL if you are using a TLS listener (also remember to mount the truststore in this case)
        - name: KAFKA_SECURITY_PROTOCOL
          value: SASL_PLAINTEXT
